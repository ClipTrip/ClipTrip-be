name: CD - Deploy to EC2 Docker Container

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-northeast-2
      ECR_REGISTRY: 118497224929.dkr.ecr.ap-northeast-2.amazonaws.com
      ECR_REPOSITORY: clip-trip/server
      IMAGE_TAG: latest
      EC2_USER: ec2-user
      EC2_HOST: ${{ secrets.EC2_HOST }}      # EC2 공인 IP 또는 DNS
      SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}  # PEM 파일 내용
      
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            CONTAINER_NAME=clip-trip-server
            
            # 최신 이미지 풀
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            # 기존 컨테이너가 존재하면 중지 및 삭제 (오류 무시)
            docker stop "$CONTAINER_NAME" || true
            docker rm "$CONTAINER_NAME" || true

            # 새로운 컨테이너 실행
            echo "Running new container $CONTAINER_NAME"
            docker run -d --name "$CONTAINER_NAME" -p 8080:8080 118497224929.dkr.ecr.ap-northeast-2.amazonaws.com/clip-trip/server:latest
